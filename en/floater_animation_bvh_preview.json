{
   "floater": {
      "@name": "Animation Preview",
      "floater.string:failed_to_initialize": {
         "@name": "failed_to_initialize",
         "#text": {
            "string": "\n        Failed to initialize motion\n    "
         }
      },
      "floater.string:anim_too_long": {
         "@name": "anim_too_long",
         "#text": {
            "string": "\n        Animation file is [LENGTH] seconds in length.\nMaximum animation length is [MAX_LENGTH] seconds.\n    "
         }
      },
      "floater.string:failed_file_read": {
         "@name": "failed_file_read",
         "#text": {
            "string": "\n        Unable to read animation file.\n[STATUS]\n    "
         }
      },
      "floater.string:E_ST_OK": {
         "@name": "E_ST_OK",
         "#text": {
            "string": "\n        Ok\n    "
         }
      },
      "floater.string:E_ST_EOF": {
         "@name": "E_ST_EOF",
         "#text": {
            "string": "\n        Premature end of file.\n    "
         }
      },
      "floater.string:E_ST_NO_CONSTRAINT": {
         "@name": "E_ST_NO_CONSTRAINT",
         "#text": {
            "string": "\n        Cannot read constraint definition.\n    "
         }
      },
      "floater.string:E_ST_NO_FILE": {
         "@name": "E_ST_NO_FILE",
         "#text": {
            "string": "\n        Cannot open BVH file.\n    "
         }
      },
      "floater.string:E_ST_NO_HIER": {
         "@name": "E_ST_NO_HIER",
         "#text": {
            "string": "\n        Invalid HIERARCHY header.\n    "
         }
      },
      "floater.string:E_ST_NO_JOINT": {
         "@name": "E_ST_NO_JOINT",
         "#text": {
            "string": "\n        Cannot find ROOT or JOINT.\n    "
         }
      },
      "floater.string:E_ST_NO_NAME": {
         "@name": "E_ST_NO_NAME",
         "#text": {
            "string": "\n        Cannot get JOINT name.\n    "
         }
      },
      "floater.string:E_ST_NO_OFFSET": {
         "@name": "E_ST_NO_OFFSET",
         "#text": {
            "string": "\n        Cannot find OFFSET.\n    "
         }
      },
      "floater.string:E_ST_NO_CHANNELS": {
         "@name": "E_ST_NO_CHANNELS",
         "#text": {
            "string": "\n        Cannot find CHANNELS.\n    "
         }
      },
      "floater.string:E_ST_NO_ROTATION": {
         "@name": "E_ST_NO_ROTATION",
         "#text": {
            "string": "\n        Cannot get rotation order.\n    "
         }
      },
      "floater.string:E_ST_NO_AXIS": {
         "@name": "E_ST_NO_AXIS",
         "#text": {
            "string": "\n        Cannot get rotation axis.\n    "
         }
      },
      "floater.string:E_ST_NO_MOTION": {
         "@name": "E_ST_NO_MOTION",
         "#text": {
            "string": "\n        Cannot find MOTION.\n    "
         }
      },
      "floater.string:E_ST_NO_FRAMES": {
         "@name": "E_ST_NO_FRAMES",
         "#text": {
            "string": "\n        Cannot get number of frames.\n    "
         }
      },
      "floater.string:E_ST_NO_FRAME_TIME": {
         "@name": "E_ST_NO_FRAME_TIME",
         "#text": {
            "string": "\n        Cannot get frame time.\n    "
         }
      },
      "floater.string:E_ST_NO_POS": {
         "@name": "E_ST_NO_POS",
         "#text": {
            "string": "\n        Cannot get position values.\n    "
         }
      },
      "floater.string:E_ST_NO_ROT": {
         "@name": "E_ST_NO_ROT",
         "#text": {
            "string": "\n        Cannot get rotation values.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_FILE": {
         "@name": "E_ST_NO_XLT_FILE",
         "#text": {
            "string": "\n        Cannot open translation file.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_HEADER": {
         "@name": "E_ST_NO_XLT_HEADER",
         "#text": {
            "string": "\n        Cannot read translation header.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_NAME": {
         "@name": "E_ST_NO_XLT_NAME",
         "#text": {
            "string": "\n        Cannot read translation names.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_IGNORE": {
         "@name": "E_ST_NO_XLT_IGNORE",
         "#text": {
            "string": "\n        Cannot read translation ignore value.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_RELATIVE": {
         "@name": "E_ST_NO_XLT_RELATIVE",
         "#text": {
            "string": "\n        Cannot read translation relative value.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_OUTNAME": {
         "@name": "E_ST_NO_XLT_OUTNAME",
         "#text": {
            "string": "\n        Cannot read translation outname value.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_MATRIX": {
         "@name": "E_ST_NO_XLT_MATRIX",
         "#text": {
            "string": "\n        Cannot read translation matrix.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_MERGECHILD": {
         "@name": "E_ST_NO_XLT_MERGECHILD",
         "#text": {
            "string": "\n        Cannot get mergechild name.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_MERGEPARENT": {
         "@name": "E_ST_NO_XLT_MERGEPARENT",
         "#text": {
            "string": "\n        Cannot get mergeparent name.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_PRIORITY": {
         "@name": "E_ST_NO_XLT_PRIORITY",
         "#text": {
            "string": "\n        Cannot get priority value.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_LOOP": {
         "@name": "E_ST_NO_XLT_LOOP",
         "#text": {
            "string": "\n        Cannot get loop value.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_EASEIN": {
         "@name": "E_ST_NO_XLT_EASEIN",
         "#text": {
            "string": "\n        Cannot get easeIn values.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_EASEOUT": {
         "@name": "E_ST_NO_XLT_EASEOUT",
         "#text": {
            "string": "\n        Cannot get easeOut values.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_HAND": {
         "@name": "E_ST_NO_XLT_HAND",
         "#text": {
            "string": "\n        Cannot get hand morph value.\n    "
         }
      },
      "floater.string:E_ST_NO_XLT_EMOTE": {
         "@name": "E_ST_NO_XLT_EMOTE",
         "#text": {
            "string": "\n        Cannot read emote name.\n    "
         }
      },
      "floater.string:E_ST_BAD_ROOT": {
         "@name": "E_ST_BAD_ROOT",
         "#text": {
            "string": "\n        Incorrect root joint name, use \"hip\".\n    "
         }
      },
      "floater.string:FS_report_frames": {
         "@name": "FS_report_frames",
         "#text": {
            "string": "\n        [F] frm.  [S] s. [FPS] FPS\n    "
         }
      },
      "text:name_label": {
         "@name": "name_label",
         "#text": {
            "string": "\n        Name:\n    "
         }
      },
      "line_editor:name_form": {
         "@name": "name_form"
      },
      "text:description_label": {
         "@name": "description_label",
         "#text": {
            "string": "\n        Description:\n    "
         }
      },
      "line_editor:description_form": {
         "@name": "description_form"
      },
      "spinner:priority": {
         "@label": {
            "string": "Priority"
         },
         "@name": "priority",
         "@tool_tip": {
            "string": "Controls which other animations can be overridden by this animation"
         }
      },
      "check_box:loop_check": {
         "@label": {
            "string": "Loop"
         },
         "@name": "loop_check",
         "@tool_tip": {
            "string": "Makes this animation loop"
         }
      },
      "text:frames_label": {
         "@name": "frames_label",
         "#text": {
            "string": "\n       300 frm. 30 s. 10 FPS\n    "
         }
      },
      "spinner:loop_in_point": {
         "@label": {
            "string": "In (%)"
         },
         "@name": "loop_in_point",
         "@tool_tip": {
            "string": "Sets point in animation that looping returns to"
         }
      },
      "spinner:loop_out_point": {
         "@label": {
            "string": "Out (%)"
         },
         "@name": "loop_out_point",
         "@tool_tip": {
            "string": "Sets point in animation that ends a loop"
         }
      },
      "spinner:loop_in_frames": {
         "@label": {
            "string": "In (frm)"
         },
         "@name": "loop_in_frames",
         "@tool_tip": {
            "string": "Sets point in animation that looping returns to, in frames"
         }
      },
      "spinner:loop_out_frames": {
         "@label": {
            "string": "Out (frm)"
         },
         "@name": "loop_out_frames",
         "@tool_tip": {
            "string": "Sets point in animation that ends a loop, in frames"
         }
      },
      "text:hand_label": {
         "@name": "hand_label",
         "#text": {
            "string": "\n        Hand Pose\n    "
         }
      },
      "combo_box:hand_pose_combo": {
         "@label": {
            "string": " "
         },
         "@name": "hand_pose_combo",
         "@tool_tip": {
            "string": "Controls what hands do during animation"
         },
         "combo_box.item:Spread": {
            "@label": {
               "string": "Spread"
            },
            "@name": "Spread"
         },
         "combo_box.item:Relaxed": {
            "@label": {
               "string": "Relaxed"
            },
            "@name": "Relaxed"
         },
         "combo_box.item:PointBoth": {
            "@label": {
               "string": "Point Both"
            },
            "@name": "PointBoth"
         },
         "combo_box.item:Fist": {
            "@label": {
               "string": "Fist"
            },
            "@name": "Fist"
         },
         "combo_box.item:RelaxedLeft": {
            "@label": {
               "string": "Relaxed Left"
            },
            "@name": "RelaxedLeft"
         },
         "combo_box.item:PointLeft": {
            "@label": {
               "string": "Point Left"
            },
            "@name": "PointLeft"
         },
         "combo_box.item:FistLeft": {
            "@label": {
               "string": "Fist Left"
            },
            "@name": "FistLeft"
         },
         "combo_box.item:RelaxedRight": {
            "@label": {
               "string": "Relaxed Right"
            },
            "@name": "RelaxedRight"
         },
         "combo_box.item:PointRight": {
            "@label": {
               "string": "Point Right"
            },
            "@name": "PointRight"
         },
         "combo_box.item:FistRight": {
            "@label": {
               "string": "Fist Right"
            },
            "@name": "FistRight"
         },
         "combo_box.item:SaluteRight": {
            "@label": {
               "string": "Salute Right"
            },
            "@name": "SaluteRight"
         },
         "combo_box.item:Typing": {
            "@label": {
               "string": "Typing"
            },
            "@name": "Typing"
         },
         "combo_box.item:PeaceRight": {
            "@label": {
               "string": "Peace Right"
            },
            "@name": "PeaceRight"
         }
      },
      "text:emote_label": {
         "@name": "emote_label",
         "#text": {
            "string": "\n        Expression\n    "
         }
      },
      "combo_box:emote_combo": {
         "@label": {
            "string": " "
         },
         "@name": "emote_combo",
         "@tool_tip": {
            "string": "Controls what face does during animation"
         },
         "item:[None]": {
            "@label": {
               "string": "(None)"
            },
            "@name": "[None]"
         },
         "item:Aaaaah": {
            "@label": {
               "string": "Aaaaah"
            },
            "@name": "Aaaaah"
         },
         "item:Afraid": {
            "@label": {
               "string": "Afraid"
            },
            "@name": "Afraid"
         },
         "item:Angry": {
            "@label": {
               "string": "Angry"
            },
            "@name": "Angry"
         },
         "item:BigSmile": {
            "@label": {
               "string": "Big Smile"
            },
            "@name": "BigSmile"
         },
         "item:Bored": {
            "@label": {
               "string": "Bored"
            },
            "@name": "Bored"
         },
         "item:Cry": {
            "@label": {
               "string": "Cry"
            },
            "@name": "Cry"
         },
         "item:Disdain": {
            "@label": {
               "string": "Disdain"
            },
            "@name": "Disdain"
         },
         "item:Embarrassed": {
            "@label": {
               "string": "Embarrassed"
            },
            "@name": "Embarrassed"
         },
         "item:Frown": {
            "@label": {
               "string": "Frown"
            },
            "@name": "Frown"
         },
         "item:Kiss": {
            "@label": {
               "string": "Kiss"
            },
            "@name": "Kiss"
         },
         "item:Laugh": {
            "@label": {
               "string": "Laugh"
            },
            "@name": "Laugh"
         },
         "item:Plllppt": {
            "@label": {
               "string": "Plllppt"
            },
            "@name": "Plllppt"
         },
         "item:Repulsed": {
            "@label": {
               "string": "Repulsed"
            },
            "@name": "Repulsed"
         },
         "item:Sad": {
            "@label": {
               "string": "Sad"
            },
            "@name": "Sad"
         },
         "item:Shrug": {
            "@label": {
               "string": "Shrug"
            },
            "@name": "Shrug"
         },
         "item:Smile": {
            "@label": {
               "string": "Smile"
            },
            "@name": "Smile"
         },
         "item:Surprise": {
            "@label": {
               "string": "Surprise"
            },
            "@name": "Surprise"
         },
         "item:Wink": {
            "@label": {
               "string": "Wink"
            },
            "@name": "Wink"
         },
         "item:Worry": {
            "@label": {
               "string": "Worry"
            },
            "@name": "Worry"
         }
      },
      "text:preview_label": {
         "@name": "preview_label",
         "#text": {
            "string": "\n        Preview while\n    "
         }
      },
      "combo_box:preview_base_anim": {
         "@label": {
            "string": " "
         },
         "@name": "preview_base_anim",
         "@tool_tip": {
            "string": "Use this to test your animation behavior while your avatar performs common actions."
         },
         "item:Standing": {
            "@label": {
               "string": "Standing"
            },
            "@name": "Standing"
         },
         "item:Walking": {
            "@label": {
               "string": "Walking"
            },
            "@name": "Walking"
         },
         "item:Sitting": {
            "@label": {
               "string": "Sitting"
            },
            "@name": "Sitting"
         },
         "item:Flying": {
            "@label": {
               "string": "Flying"
            },
            "@name": "Flying"
         }
      },
      "spinner:ease_in_time": {
         "@label": {
            "string": "Ease In (sec)"
         },
         "@name": "ease_in_time",
         "@tool_tip": {
            "string": "Amount of time (in seconds) over which animations blends in"
         }
      },
      "spinner:ease_out_time": {
         "@label": {
            "string": "Ease Out (sec)"
         },
         "@name": "ease_out_time",
         "@tool_tip": {
            "string": "Amount of time (in seconds) over which animations blends out"
         }
      },
      "button:play_btn": {
         "@name": "play_btn",
         "@tool_tip": {
            "string": "Play your animation"
         }
      },
      "button:pause_btn": {
         "@name": "pause_btn",
         "@tool_tip": {
            "string": "Pause your animation"
         }
      },
      "button:stop_btn": {
         "@name": "stop_btn",
         "@tool_tip": {
            "string": "Stop animation playback"
         }
      },
      "slider:playback_slider": {
         "@name": "playback_slider"
      },
      "text:bad_animation_text": {
         "@name": "bad_animation_text",
         "#text": {
            "string": "\n        Unable to read animation file.\nWe recommend BVH files exported from Poser 4.\n    "
         }
      },
      "button:reload_btn": {
         "@label": {
            "string": "Reload file"
         },
         "@name": "reload_btn"
      },
      "button:ok_btn": {
         "@label": {
            "string": "Upload (L$[AMOUNT])"
         },
         "@name": "ok_btn"
      },
      "button:cancel_btn": {
         "@label": {
            "string": "Cancel"
         },
         "@name": "cancel_btn"
      },
      "text:info_text": {
         "@name": "info_text"
      }
   }
}